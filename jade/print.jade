doctype html
html
  include includes/head.jade
body
  include includes/navigate.jade
  .container
      .row
          //
             Overview
               
          .bs-docs-section
            .page-header
              h1#js-overview Javascript
            h3#js-individual-compiled Individual or compiled
            p
              | Plugins can be included individually (using Jasny Bootstrap's individual
              code *.js
              | files), or all at once (using
              code hui-bootstrap.js
              | or the minified
              code hui-bootstrap.min.js
              | ).
            p
              | The Jasny Bootstrap plugins work with or without loading Twitter Bootstrap's
              code bootstrap.js
              | .
            .bs-callout.bs-callout-danger
              h4 Do not attempt to include both.
              p
                | Both
                code hui-bootstrap.js
                | and
                code hui-bootstrap.min.js
                | contain all plugins in a single file.
            h3#js-data-attrs Data attributes
            p
              | You can use all Jasny Bootstrap plugins purely through the markup API without writing a single line of JavaScript. This is Bootstrap's first-class API and should be your first consideration when using a plugin.
            p
              | That said, in some situations it may be desirable to turn this functionality off. Therefore, we also provide the ability to disable the data attribute API by unbinding all events on the document namespaced with
              code data-api
              | . This looks like this:
              pre.jsCode
                = '$(document).off(\'.data-api\')'
                            
              p
                | Alternatively, to target a specific plugin, just include the plugin's name as a namespace along with the data-api namespace like this:
              pre.jsCode.
                = '$(document).off(\'.alert.data-api\')'
                            
              h3#js-programmatic-api Programmatic API
              p
                | We also believe you should be able to use all Bootstrap plugins purely through the JavaScript API. All public APIs are single, chainable methods, and return the collection acted upon.
              pre.jsCode
                 = '$(".fileinput").fileinput().addClass("fat")'
                            
              p
                | All methods should accept an optional options object, a string which targets a particular method, or nothing (which initiates a plugin with default behavior):
              pre.jsCode
                = '$("#myMenu").offcanvas()                      // initialized with defaults \n$("#myMenu").offcanvas({ autohide: false })   // initialized with no autohide \n$("#myMenu").offcanvas(\'show\')                // initializes and invokes show immediately'            
            p
              | Each plugin also exposes its raw constructor on a
              code Constructor
              | property:
              code $.fn.popover.Offcanvas
              | . If you'd like to get a particular plugin instance, retrieve it directly from an element:
              code $('.navmenu').data('offcanvas')
              | .
            h3#js-noconflict No conflict
            p
              | Sometimes it is necessary to use Bootstrap plugins with other UI frameworks. In these circumstances, namespace collisions can occasionally occur. If this happens, you may call
              code .noConflict
              | on the plugin you wish to revert the value of.
            pre.jsCode.
              \nvar bootstrapButton = $.fn.button.noConflict() // return $.fn.button to previously assigned value
              $.fn.bootstrapBtn = bootstrapButton            // give $().bootstrapBtn the Bootstrap functionality
                        
            h3#js-events Events
            p
              | Bootstrap provides custom events for most plugin's unique actions. Generally, these come in an infinitive and past participle form - where the infinitive (ex.
              code show
              | ) is triggered at the start of an event, and its past participle form (ex.
              code shown
              | ) is trigger on the completion of an action.
            p As of 3.0.0, all Bootstrap events are namespaced.
            p
              | All infinitive events provide
              code preventDefault
              | functionality. This provides the ability to stop the execution of an action before it starts.
            pre.jsCode.
              \n$('#myMenu').on('show.bs.offcanvas', function (e) {
                if (!data) return e.preventDefault() // stops menu from being shown
              })
              
          .bs-docs-section
            .page-header
              h1#offcanvas
                | DJ Ralphio
                small &nbsp;dj-ralphio-simple.js
            h2#offcanvas-examples Example
            p
              | The DJ Ralphio Plugin allows you to easily convert any text input into a friendly up and down spinner. This is a very simple version that only depends on a single javascript function. For the full demo visit the DJ Ralphio Plugin Page.
            .bs-example
              p.lead TODO ADD THIS EXAMPLE FROM DEMO PAGE
            .push       
          .bs-docs-section
            .page-header
              h1#offcanvas
                | Off canvas
                small offcanvas.js
            h2#offcanvas-examples Example
            p
              | The offcanvas plugin allows you to hide an element from sight and than show it by moving either that or any other element. It's intented to be used for off canvas navigation, like push menus.
            .bs-example.bs-navmenu-offcanvas-example
              #myNavmenuCanvas
                nav#myNavmenu.navmenu.navmenu-default.navmenu-fixed-left.offcanvas(role='navigation', style='left:100px')
                  a.navmenu-brand(href='#') Brand
                  ul.nav.navmenu-nav
                    li.active
                      a(href='#') Home
                    li
                      a(href='#') Link
                    li
                      a(href='#') Link
                .navbar.navbar-default.navbar-fixed-top
                  button.navbar-toggle(type='button', data-toggle='offcanvas', data-target='#myNavmenu', data-canvas='#myNavmenuCanvas', data-placement='left')
                    span.icon-bar
                    span.icon-bar
                    span.icon-bar
                p
                  | Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis in aliquet nisl. Praesent sed leo congue, fringilla eros eu, tempus metus. Nam mollis odio ipsum, non vehicula ipsum accumsan sodales. Morbi varius vitae elit euismod cursus. Donec a dapibus justo, in facilisis nisi. Suspendisse ut turpis dui. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque dui risus, tincidunt at odio ut, ultrices dignissim ipsum. Cras ultrices erat nec leo luctus varius. Nulla sollicitudin tincidunt nulla, ut porta mauris volutpat vitae. Suspendisse ornare dolor sit amet massa venenatis pulvinar.
            //
               /example 
            pre.htmlCode
              = '<nav id="myNavmenu" class="navmenu navmenu-default navmenu-fixed-left offcanvas" role="navigation"> \n &emsp;<a class="navmenu-brand" href="#">Brand</a> \n &emsp;&emsp;<ul class="nav navmenu-nav"> \n &emsp;&emsp;&emsp;<li class="active"><a href="#">Link</a></li> \n &emsp;&emsp;&emsp;<li><a href="#">Link</a></li> \n &emsp;&emsp;&emsp;<li class="dropdown"> \n &emsp;&emsp;&emsp;&emsp;<a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown <b class="caret"></b></a> \n &emsp;&emsp;&emsp;&emsp;&emsp;<ul class="dropdown-menu navmenu-nav" role="menu"> \n &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<li><a href="#">Action</a></li> \n &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<li><a href="#">Another action</a></li> \n &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<li><a href="#">Something else here</a></li> \n &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<li><a href="#">Separated link</a></li> \n &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<li><a href="#">One more separated link</a></li> \n &emsp;&emsp;&emsp;&emsp;&emsp;</ul> \n &emsp;&emsp;&emsp;</li> \n &emsp;&emsp;</ul> \n &emsp;</nav>'            
                        
                        
            .bs-callout.bs-callout-info
              h4 Examples
              p
                | For better understanding, have a look at the
                a(href='../examples/navmenu/') off canvas slide in menu
                | ,
                a(href='../examples/navmenu-push/') off canvas push menu
                | and
                a(href='../examples/navmenu-reveal/') off canvas reveal menu
                | exapmles.
            hr.bs-docs-separator
            h2#offcanvas-usage Usage
            p
              | Add
              code .offcanvas
              | to hide an element. Alternatively add
              code .offcanvas-*
              | to hide an element up to a specific viewport width. Adding the
              code .offcanvas
              | class is not required. You may also hide an element by any other means.
            p
              | The effect works best for elements positioned to the top, bottom, left or right of the window, either with absolute or fixed positioning.
            p
              | When shown, the plugin adds
              code .canvas-slid
              | to the element that has slid.
            h3 Via data attributes
            p
              | Add
              code data-toggle="offcanvas"
              | and a
              code data-target
              | to control, assigning it to show and hide the target element. The
              code data-target
              | attribute accepts a CSS selector to apply the collapse to.
            p
              | Optionally add a
              code data-canvas
              | attribute to slide a canvas instead of only the target element. For a push menu set
              code data-canvas="body"
              | .
              h3 Via JavaScript
              p Call the input mask via javascript:
              pre.jsCode.
                \n$('.navmenu').offcanvas()
                            
              h3 Options
              table.table.table-bordered.table-striped
                thead
                  tr
                    th(style='width: 100px;') Name
                    th(style='width: 50px;') type
                    th(style='width: 100px;') default
                    th description
                tbody
                  tr
                    td canvas
                    td string
                    td false
                    td
                      | If set, the canvas will be moved on show and hide instead of the target element. This creates alternative effects.
                  tr
                    td toggle
                    td boolean
                    td true
                    td Toggles the off canvas element on invocation
                  tr
                    td placement
                    td string
                    td 'auto'
                    td
                      | Where to position the element at the start of the animation. For example, if placement is "left", the element will slide from left to right. The default option "auto" guesses the placement based on position and dimension.
                  tr
                    td autohide
                    td boolean
                    td true
                    td Hide the off canvas element if clicked anywhere other that the element.
                  tr
                    td recalc
                    td boolean
                    td true
                    td
                      | Calculate if off canvas should be disabled for this viewport width on window resize. If your elements always gets hidden on window resize, try setting this to false.
                  tr
                    td disableScrolling
                    td boolean
                    td true
                    td
                      | Disable scrolling when the off canvas element is shown, by setting overflow to hidden for the body.
              .bs-callout.bs-callout-danger
                h4 Graceful degradation
                p
                  | For browsers that don't support transform (mainly IE8), the
                  code target
                  | option is ignored. In that case, the plugin will always slide the target element. In that case
                  code .canvas-slid
                  | will be added to the target element instead.
              h3 Methods
              h4 .offcanvas(options)
              p Initializes the off canvas element with an optional options.
              h4 .offcanvas('toggle')
              p Toggles an off canvas element to shown or hidden.
              h4 .offcanvas('show')
              p Shows an off canvas element.
              h4 .offcanvas('hide')
              p Hides an off canvas element.
              h3 Events
              .table-responsive
                table.table.table-bordered.table-striped
                  thead
                    tr
                      th(style='width: 150px;') Event Type
                      th Description
                  tbody
                    tr
                      td show.bs.offcanvas
                      td This event fires immediately when the show instance method is called.
                    tr
                      td shown.bs.offcanvas
                      td
                        | This event is fired when the target has been made visible to the user (will wait for CSS transitions to complete).
                    tr
                      td hide.bs.offcanvas
                      td This event is fired immediately when the hide instance method has been called.
                    tr
                      td hidden.bs.offcanvas
                      td
                        | This event is fired when the modal has finished being hidden from the user (will wait for CSS transitions to complete).
          .bs-docs-section.bs-jasny
            .page-header
              h1#rowlink
                | Row link
                small rowlink.js
            h2#rowlink-examples Example
            p This plugin turns a table row into a clickable link.
            .bs-example
              table.table.table-striped.table-bordered.table-hover
                thead
                  tr
                    th Name
                    th Description
                    th Actions
                tbody.rowlink(data-link='row')
                  tr
                    td
                      a(href='#inputmask') Input mask
                    td
                      | Input masks can be used to force the user to enter data conform a specific format.
                    td.rowlink-skip
                      a(href='#') Action
                  tr
                    td
                      a(href='http://www.jasny.net/', target='_blank') jasny.net
                    td Shared knowledge of Arnold Daniels aka Jasny.
                    td.rowlink-skip
                      a(href='#') Action
                  tr
                    td
                      a(href='#rowlinkModal', data-toggle='modal') Launch modal
                    td Toggle a modal via JavaScript by clicking this row.
                    td.rowlink-skip
                      a(href='#') Action
            #rowlinkModal.modal.fade(tabindex='-1', role='dialog', aria-hidden='true')
              .modal-dialog
                .modal-content
                  .modal-header
                    button.close(type='button', data-dismiss='modal', aria-hidden='true') ×
                    h4.modal-title Rowlink Modal
                  .modal-body
                    p This modal proves that JavaScript events are triggered correctly by rowlink.
            pre.htmlCode
              = '<table class="table table-striped table-bordered table-hover">\n&emsp;<thead>\n&emsp;&emsp;<tr>\n&emsp;&emsp;&emsp;<th>Name</th>\n&emsp;&emsp;&emsp;<th>Description</th>\n&emsp;&emsp;&emsp;<th>Actions</th>\n&emsp;&emsp;</tr>\n&emsp;</thead>\n&emsp;&emsp;<tbody data-link="row" class="rowlink">\n&emsp;&emsp;&emsp;<tr>\n&emsp;&emsp;&emsp;&emsp;<td><a href="#inputmask">Input mask</a></td>\n&emsp;&emsp;&emsp;&emsp;<td>Input masks can be used to force the user to enter data conform a specific format.</td>\n&emsp;&emsp;&emsp;&emsp;<td class="rowlink-skip"><a href="#">Action</a></td>\n&emsp;&emsp;&emsp;</tr>\n&emsp;&emsp;&emsp;<tr>\n&emsp;&emsp;&emsp;&emsp;<td><a href="http://www.jasny.net/" target="_blank">jasny.net</a></td>\n&emsp;&emsp;&emsp;&emsp;<td>Shared knowledge of Arnold Daniels aka Jasny.</td>\n&emsp;&emsp;&emsp;&emsp;<td class="rowlink-skip"><a href="#">Action</a></td>\n&emsp;&emsp;&emsp;</tr>\n&emsp;&emsp;&emsp;<tr>\n&emsp;&emsp;&emsp;&emsp;<td><a href="#rowlinkModal" data-toggle="modal">Launch modal</a></td>\n&emsp;&emsp;&emsp;&emsp;<td>Toggle a modal via JavaScript by clicking this row.</td>\n&emsp;&emsp;&emsp;&emsp;<td class="rowlink-skip"><a href="#">Action</a></td>\n&emsp;&emsp;&emsp;</tr>\n&emsp;&emsp;</tbody>\n&emsp;</table>'    
                        
            hr.bs-docs-separator
            h2#rowlink-usage Usage
            h3 Via data attributes
            p
              | Add class
              code .rowlink
              | and attribute
              code data-link="row"
              | to a
              code <table>
              | or
              code <tbody>
              | element. For other options append the name to
              code data-
              | , as in
              code data-target="a.mainlink"
              | A cell can be excluded by adding the
              code .rowlink-skip
              | class to the
              code <td>
              | .
            h3 Via JavaScript
            p Call the input mask via javascript:
            pre.jsCode
              = '$(\'tbody.rowlink\').rowlink()'
                        
            h3 Options
            table.table.table-bordered.table-striped
              thead
                tr
                  th(style='width: 100px;') Name
                  th(style='width: 50px;') type
                  th(style='width: 100px;') default
                  th description
              tbody
                tr
                  td target
                  td string
                  td 'a'
                  td A jquery selector string, to select the link element within each row.
            h3 Methods
            h4 .rowlink(options)
            p Makes the rows of a table or tbody clickable.
          //
             Input mask
               
          .bs-docs-section.bs-jasny
            .page-header
              h1#inputmask
                | Input mask
                small inputmask.js
            h2#inputmask-examples Example
            p
              | Input masks can be used to force the user to enter data conform a specific format. Unlike validation, the user can't enter any other key than the ones specified by the mask.
            .bs-example
              input.form-control(type='text', data-mask='999-99-999-9999-9', placeholder='ISBN')
            pre.htmlCode.
              \n            
                        
            hr.bs-docs-separator
            h2#inputmask-usage Usage
            h3 Via data attributes
            p
              | Add data attributes to register an element with inputmask functionality as shown in the example above.
            h3 Via JavaScript
            p Call the input mask via javascript:
            pre.jsCode
              = '$(\'.inputmask\').inputmask({ mask: \'999-99-999-9999-9\' })'
                        
            h3 Options
            p
              | Options can be passed via data attributes or JavaScript. For data attributes, append the option name to
              code data-
              | , as in
              code data-mask="999-99-999-9999-9"
              | .
            .table-responsive
              table.table.table-bordered.table-striped
                thead
                  tr
                    th(style='width: 100px;') Name
                    th(style='width: 50px;') type
                    th(style='width: 100px;') default
                    th description
                tbody
                  tr
                    td mask
                    td string
                    td ''
                    td
                      | A string of formatting and literal characters, defining the input mask (see below).
                  tr
                    td placeholder
                    td string
                    td '_'
                    td The character that is displayed where something needs to be typed.
            h3 Format
            p
              | Each typed character needs to match exactly one character in the
              code mask
              | option.
            .table-responsive
              table.table.table-bordered.table-striped
                thead
                  tr
                    th Character
                    th Description
                tbody
                  tr
                    td 9
                    td Number
                  tr
                    td a
                    td Letter
                  tr
                    td ?
                    td Alphanumeric
                  tr
                    td *
                    td Any character
            h3 Methods
            h4 .inputmask(options)
            p Initializes an input element with an input mask.
               
    include includes/footer.jade